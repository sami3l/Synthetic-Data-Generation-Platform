"""modify to upload_path

Revision ID: 6906b91cab6b
Revises: 1b96472e5e9a
Create Date: 2025-08-07 12:22:27.939963

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6906b91cab6b'
down_revision: Union[str, Sequence[str], None] = '1b96472e5e9a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_profiles_id', table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index('ix_uploaded_datasets_id', table_name='uploaded_datasets')
    op.drop_table('uploaded_datasets')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('uploaded_datasets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('original_filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('unique_filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('n_rows', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('n_columns', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('columns', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('column_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('memory_usage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('has_nulls', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('total_nulls', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_valid', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('validation_errors', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='uploaded_datasets_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='uploaded_datasets_pkey'),
    sa.UniqueConstraint('unique_filename', name='uploaded_datasets_unique_filename_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('ix_uploaded_datasets_id', 'uploaded_datasets', ['id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('usage_purpose', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_profiles_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_profiles_pkey'),
    sa.UniqueConstraint('user_id', name='user_profiles_user_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('ix_user_profiles_id', 'user_profiles', ['id'], unique=False)
    # ### end Alembic commands ###
